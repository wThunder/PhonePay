<template>
	<view class="pengke-camera" :style="{ width: windowWidth, height: windowHeight }">
		<live-pusher
			id="livePusher"
			ref="livePusher"
			class="livePusher"
			mode="FHD"
			beauty="0"
			whiteness="0"
			:aspect="aspect"
			min-bitrate="1000"
			audio-quality="16KHz"
			device-position="front"
			:auto-focus="true"
			:muted="true"
			:enable-camera="true"
			:enable-mic="false"
			:zoom="false"
			@statechange="statechange"
			:style="{}"
		></live-pusher>

		<view class="menu">
			<view class="camera_mask1" style="height: 150rpx"></view>
			<image class="stay" src="/static/xxx.png" style="width: 40rpx; height: 43rpx" mode=""></image>
			<image src="/static/camera.gif" mode="widthFix" class="camera_mask"></image>
			<view class="camera_mask2"></view>
			<view class="tips_box">
				<text class="tips_box_text">{{ status_list[current_status].name }}</text>
			</view>
		</view>
		<view class="MaskTTT" v-if="show"></view>
	</view>
</template>
<script>
let _this = null;
export default {
	data() {
		return {
			poenCarmeInterval: null, //打开相机的轮询
			aspect: '2:3', //比例
			windowWidth: '', //屏幕可用宽度
			windowHeight: '', //屏幕可用高度
			camerastate: false, //相机准备好了
			livePusher: null, //流视频对象
			snapshotsrc: null, //快照

			current_status: 0,

			status_list: [
				{
					id: 1,
					name: '拿起手机，眨眨眼',
					time: 5
				},
				{
					id: 2,
					name: '拿起手机，眨眨眼',
					time: 10
				},
				{
					id: 3,
					name: '拿起手机，眨眨眼',
					time: 15
				}
			],
			current_time: 0,
			show: true,
			interval: false
		};
	},
	onLoad(e) {
		_this = this;
		this.initCamera();
	},
	onReady() {
		this.livePusher = uni.createLivePusherContext('livePusher', this);
		this.startPreview(); //开启预览并设置摄像头
		this.poenCarme();
	},
	methods: {
		set_status: function () {
			this.current_time = 0;
			if (this.interval) {
				clearInterval(this.interval);
			}
			this.interval = setInterval(() => {
				this.current_time++;
				if (this.current_time < 1) {
					this.current_status = 0;
				}
				if (this.current_time > 1 && this.current_time <= 3) {
					this.current_status = 2;
					setTimeout(() => {
						clearInterval(this.interval);
						//todo返回上一页，传入完成状态
						uni.redirectTo({
							url: '/pages-two/checking/subOk'
						});
					}, 1000);
				}
			}, 1000);
		},

		//轮询打开
		poenCarme() {
			//#ifdef APP-PLUS
			if (plus.os.name == 'Android') {
				this.poenCarmeInterval = setInterval(function () {
					if (!_this.camerastate) _this.startPreview();
				}, 2500);
			}
			//#endif
		},
		//初始化相机
		initCamera() {
			uni.getSystemInfo({
				success: function (res) {
					// _this.windowWidth = res.windowWidth;
					_this.windowHeight = res.windowHeight;
					// let zcs = _this.aliquot(_this.windowWidth, _this.windowHeight);
					// _this.aspect = (_this.windowWidth / zcs) + ':' + (_this.windowHeight / zcs);
					_this.set_status();
				}
			});
		},

		//整除数计算
		aliquot(x, y) {
			if (x % y == 0) return y;
			return this.aliquot(y, x % y);
		},

		//开始预览
		startPreview() {
			this.livePusher.startPreview({
				success: (a) => {}
			});
		},

		//停止预览
		stopPreview() {
			this.livePusher.stopPreview({
				success: (a) => {
					_this.camerastate = false;
				}
			});
		},

		//状态
		statechange(e) {
			//状态改变
			if (e.detail.code == 1007) {
				_this.camerastate = true;
				setTimeout(() => {
					_this.show = false;
				}, 300);
			} else if (e.detail.code == -1301) {
				_this.camerastate = false;
			}
		},

		//返回
		back() {
			uni.navigateBack();
		},

		//抓拍
		snapshot() {
			//震动
			uni.vibrateShort({
				success: function () {}
			});
			//拍照
			this.livePusher.snapshot({
				success: (e) => {
					_this.snapshotsrc = e.message.tempImagePath;
					_this.stopPreview();
					_this.setImage();
					uni.navigateBack();
				}
			});
		},

		//反转
		flip() {
			this.livePusher.switchCamera();
		},

		//设置
		setImage() {
			let pages = getCurrentPages();
			let prevPage = pages[pages.length - 2];
			prevPage.$vm.setImage({
				path: _this.snapshotsrc
			});
		}
	}
};
</script>

<style>
.MaskTTT {
	position: fixed;
	top: 0;
	left: 0;
	width: 10000px;
	height: 10000px;
	background-color: #fff;
	z-index: 100000;
}

.livePusher {
	width: 500rpx;
	height: 500rpx;
	position: relative;
	top: 270rpx;
	left: 120rpx;
}

.stay {
	position: absolute;
	top: 93rpx;
	left: 32rpx;
	z-index: 601;
}

.tips_box {
	position: absolute;
	width: 750rpx;

	text-align: center;
	padding-top: 80rpx;
	padding-bottom: 80rpx;
	top: 80rpx;
	justify-content: center;
	align-items: center;
}
.tips_box_text {
	font-size: 38rpx;
	font-weight: bold;
}

.menu {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 600;

	display: flex;
	width: 750rpx;
	justify-content: flex-start;
	flex-direction: column;
}
.camera_mask {
	width: 750rpx;
	height: 750rpx;
}

.camera_mask1 {
	width: 750rpx;
	background-color: #fff;
}

.camera_mask2 {
	width: 750rpx;
	flex: 1;
	background-color: #fff;
}
</style>
